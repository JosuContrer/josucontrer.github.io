(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{68:function(e,t,o){"use strict";o.r(t),o.d(t,"frontMatter",(function(){return r})),o.d(t,"metadata",(function(){return b})),o.d(t,"rightToc",(function(){return i})),o.d(t,"default",(function(){return p}));var n=o(2),l=o(6),c=(o(0),o(82)),r={id:"component-api",slug:"component-api",hide_title:!0,sidebar_label:"Component API",title:"Component API",description:"The reactjs-popup API is inspired by semantic popup docs"},b={unversionedId:"component-api",id:"component-api",isDocsHomePage:!1,title:"Component API",description:"The reactjs-popup API is inspired by semantic popup docs",source:"@site/docs/component-api.mdx",slug:"/component-api",permalink:"/component-api",editUrl:"https://github.com/yjose/reactjs-popup/edit/master/docs/docs/docs/component-api.mdx",version:"current",sidebar_label:"Component API",sidebar:"someSidebar",previous:{title:"Getting Started",permalink:"/getting-started"},next:{title:"React Modal",permalink:"/react-modal"}},i=[{value:"trigger",id:"trigger",children:[]},{value:"on",id:"on",children:[]},{value:"children",id:"children",children:[]},{value:"position",id:"position",children:[]},{value:"offsetX",id:"offsetx",children:[]},{value:"offsetY",id:"offsety",children:[]},{value:"arrow",id:"arrow",children:[]},{value:"modal",id:"modal",children:[]},{value:"disabled",id:"disabled",children:[]},{value:"lockScroll",id:"lockscroll",children:[]},{value:"closeOnDocumentClick",id:"closeondocumentclick",children:[]},{value:"closeOnEscape",id:"closeonescape",children:[]},{value:"repositionOnResize",id:"repositiononresize",children:[]},{value:"mouseEnterDelay",id:"mouseenterdelay",children:[]},{value:"mouseLeaveDelay",id:"mouseleavedelay",children:[]},{value:"onOpen",id:"onopen",children:[]},{value:"onClose",id:"onclose",children:[]},{value:"contentStyle",id:"contentstyle",children:[]},{value:"overlayStyle",id:"overlaystyle",children:[]},{value:"arrowStyle",id:"arrowstyle",children:[]},{value:"className",id:"classname",children:[]},{value:"keepTooltipInside",id:"keeptooltipinside",children:[]},{value:"nested",id:"nested",children:[]}],a={rightToc:i};function p(e){var t=e.components,o=Object(l.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},a,o,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"component-api"},"Component API"),Object(c.b)("p",null,"This is the list of props that you should probably know about\ud83d\udc47"),Object(c.b)("h3",{id:"trigger"},"trigger"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"{node,func} | require")),Object(c.b)("p",null,"Element to be rendered in-place where the popup is defined"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"// need to forward ref if you are trying to use a function trigger with React Component\n\n// Works\n<Popup\n  trigger={open => (\n    <button className=\"button\">Trigger - {open ? 'Opened' : 'Closed'}</button>\n  )}\n  position=\"right center\"\n  closeOnDocumentClick\n>\n  <span> Popup content </span>\n</Popup>;\n\n// works too\nconst CustomButton = React.forwardRef(({ open, ...props }, ref) => (\n  <button className=\"button\" ref={ref} {...props}>\n    Trigger - {props.open ? 'Opened' : 'Closed'}\n  </button>\n));\n\n<Popup\n  trigger={open => <CustomButton open={open} />}\n  position=\"right center\"\n  closeOnDocumentClick\n>\n  <span> Popup content </span>\n</Popup>;\n")),Object(c.b)("h4",{id:"open"},"open"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"{bool}")),Object(c.b)("p",null,"Take full control over the popup state."),Object(c.b)("h4",{id:"defaultopen"},"defaultOpen"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"bool | false")),Object(c.b)("p",null,"Default open value : initial state"),Object(c.b)("h3",{id:"on"},"on"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"enum,Array | ",Object(c.b)("inlineCode",{parentName:"p"},"'hover'"))),Object(c.b)("p",null,"Events triggering the popup. Enums or Array of : ",Object(c.b)("inlineCode",{parentName:"p"},"'hover' 'click' 'focus' 'right-click'")," ."),Object(c.b)("h3",{id:"children"},"children"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"node or func")),Object(c.b)("p",null,"Popup content"),Object(c.b)("h3",{id:"position"},"position"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"{enum, Array} | ",Object(c.b)("inlineCode",{parentName:"p"},"'bottom center'"))),Object(c.b)("p",null,"Position for the popover. Best position(calculated by checking against overlap with boundary element) is applied in the order specified. ",Object(c.b)("br",null)," Enums:",Object(c.b)("inlineCode",{parentName:"p"},"'top left' 'top right' 'bottom right' 'bottom left' 'right center' 'left center' 'top center' 'bottom center' 'center center'")),Object(c.b)("h3",{id:"offsetx"},"offsetX"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"number | 0")),Object(c.b)("p",null,"OffsetX in pixels to be applied to the Popup."),Object(c.b)("h3",{id:"offsety"},"offsetY"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"number | 0")),Object(c.b)("p",null,"OffsetY in pixels to be applied to the Popup."),Object(c.b)("h3",{id:"arrow"},"arrow"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"bool | true")),Object(c.b)("p",null,"Arrow element. Note that this should be set to ",Object(c.b)("inlineCode",{parentName:"p"},"false")," if the position is set to ",Object(c.b)("inlineCode",{parentName:"p"},"'center center'")),Object(c.b)("h3",{id:"modal"},"modal"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"bool| false")),Object(c.b)("p",null,"A modal component when modal ={true}"),Object(c.b)("h3",{id:"disabled"},"disabled"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"bool | false")),Object(c.b)("p",null,"Disable the popup from showing up and close it if it's open"),Object(c.b)("h3",{id:"lockscroll"},"lockScroll"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"bool | false")),Object(c.b)("p",null,"Disable body scroll when modal is open ( work only with modal)"),Object(c.b)("h3",{id:"closeondocumentclick"},"closeOnDocumentClick"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"bool | true")),Object(c.b)("p",null,"Close popup when the overlay clicked"),Object(c.b)("h3",{id:"closeonescape"},"closeOnEscape"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"bool | true")),Object(c.b)("p",null,"Close popup when Escape clicked"),Object(c.b)("h3",{id:"repositiononresize"},"repositionOnResize"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"bool | true")),Object(c.b)("p",null,"Recalculate position when ",Object(c.b)("inlineCode",{parentName:"p"},"window")," is resized"),Object(c.b)("h3",{id:"mouseenterdelay"},"mouseEnterDelay"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"number | 100\nMilliseconds to wait before opening on mouse over")),Object(c.b)("h3",{id:"mouseleavedelay"},"mouseLeaveDelay"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"number | 100")),Object(c.b)("p",null,"Milliseconds to wait before closing on mouse leave"),Object(c.b)("h3",{id:"onopen"},"onOpen"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"func")),Object(c.b)("p",null,"A function called on open event"),Object(c.b)("h3",{id:"onclose"},"onClose"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"{func}")),Object(c.b)("p",null,"A function called on close event"),Object(c.b)("h3",{id:"contentstyle"},"contentStyle"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"object")),Object(c.b)("p",null,"Custom popup content style |"),Object(c.b)("h3",{id:"overlaystyle"},"overlayStyle"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"object")),Object(c.b)("p",null,"Custom overlay style ",Object(c.b)("br",null)," Note: ",Object(c.b)("inlineCode",{parentName:"p"},"top")," and ",Object(c.b)("inlineCode",{parentName:"p"},"left")," property will not be overridden. |"),Object(c.b)("h3",{id:"arrowstyle"},"arrowStyle"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"object")),Object(c.b)("p",null,"Custom arrow style ",Object(c.b)("br",null)," Note: ",Object(c.b)("inlineCode",{parentName:"p"},"transform")," property will not be overridden. |"),Object(c.b)("h3",{id:"classname"},"className"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"string")),Object(c.b)("p",null,"Custom Popup ClassName ",Object(c.b)("br",null)," Note: this class name will be merged with the component element: ex ",Object(c.b)("inlineCode",{parentName:"p"},"className='foo'")," means ",Object(c.b)("inlineCode",{parentName:"p"},"foo-arrow")," to style arrow, ",Object(c.b)("inlineCode",{parentName:"p"},"foo-overlay")," to style overlay and ",Object(c.b)("inlineCode",{parentName:"p"},"foo-content")," to style popup content |"),Object(c.b)("h3",{id:"keeptooltipinside"},"keepTooltipInside"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"bool, string | true")),Object(c.b)("p",null,"Html selector, class name or id element that the tooltip must be inside (defaults to ",Object(c.b)("inlineCode",{parentName:"p"},"window")," if keepTooltipInside = true) default false |"),Object(c.b)("h3",{id:"nested"},"nested"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"bool | false")),Object(c.b)("p",null,"Starting from v2 you should add nested props if you are going to use nested popups ( to make sure ",Object(c.b)("inlineCode",{parentName:"p"},"onClickOutside")," behavior will work as expected)"))}p.isMDXComponent=!0},82:function(e,t,o){"use strict";o.d(t,"a",(function(){return u})),o.d(t,"b",(function(){return O}));var n=o(0),l=o.n(n);function c(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function b(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){c(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,l=function(e,t){if(null==e)return{};var o,n,l={},c=Object.keys(e);for(n=0;n<c.length;n++)o=c[n],t.indexOf(o)>=0||(l[o]=e[o]);return l}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)o=c[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(l[o]=e[o])}return l}var a=l.a.createContext({}),p=function(e){var t=l.a.useContext(a),o=t;return e&&(o="function"==typeof e?e(t):b(b({},t),e)),o},u=function(e){var t=p(e.components);return l.a.createElement(a.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return l.a.createElement(l.a.Fragment,{},t)}},d=l.a.forwardRef((function(e,t){var o=e.components,n=e.mdxType,c=e.originalType,r=e.parentName,a=i(e,["components","mdxType","originalType","parentName"]),u=p(o),d=n,O=u["".concat(r,".").concat(d)]||u[d]||s[d]||c;return o?l.a.createElement(O,b(b({ref:t},a),{},{components:o})):l.a.createElement(O,b({ref:t},a))}));function O(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var c=o.length,r=new Array(c);r[0]=d;var b={};for(var i in t)hasOwnProperty.call(t,i)&&(b[i]=t[i]);b.originalType=e,b.mdxType="string"==typeof e?e:n,r[1]=b;for(var a=2;a<c;a++)r[a]=o[a];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,o)}d.displayName="MDXCreateElement"}}]);